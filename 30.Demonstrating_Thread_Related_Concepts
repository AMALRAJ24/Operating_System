#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

void *threadFunction(void *arg) {
    int *thread_num = (int *)arg;
    printf("Thread %d is running.\n", *thread_num);
    pthread_exit((void *)(*thread_num + 10)); 
}

int main() {
    pthread_t thread1, thread2;
    int thread_num1 = 1, thread_num2 = 2;
    void *retval;

    if (pthread_create(&thread1, NULL, threadFunction, &thread_num1) != 0) {
        perror("Error creating thread1");
        exit(EXIT_FAILURE);
    }
    if (pthread_create(&thread2, NULL, threadFunction, &thread_num2) != 0) {
        perror("Error creating thread2");
        exit(EXIT_FAILURE);
    }
    printf("Threads created successfully.\n");
    if (pthread_join(thread1, &retval) != 0) {
        perror("Error joining thread1");
        exit(EXIT_FAILURE);
    }
    printf("Thread 1 exited with value: %ld\n", (long)retval);

    if (pthread_join(thread2, &retval) != 0) {
        perror("Error joining thread2");
        exit(EXIT_FAILURE);
    }
    printf("Thread 2 exited with value: %ld\n", (long)retval);

    if (pthread_equal(thread1, thread2)) {
        printf("Thread 1 and Thread 2 are equal.\n");
    } else {
        printf("Thread 1 and Thread 2 are not equal.\n");
    }

    printf("Main thread is exiting.\n");
    pthread_exit(NULL); 
}
