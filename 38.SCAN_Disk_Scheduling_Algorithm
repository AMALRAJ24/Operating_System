#include <stdio.h>
#include <stdlib.h>

void SCAN(int arr[], int n, int head, int direction) {
    int i, distance, total_distance = 0;

    // Sort the request array
    for (i = 0; i < n - 1; i++) {
        for (int j = i + 1; j < n; j++) {
            if (arr[i] > arr[j]) {
                int temp = arr[i];
                arr[i] = arr[j];
                arr[j] = temp;
            }
        }
    }

    // Find the position of the head in the sorted array
    int pos = -1;
    for (i = 0; i < n; i++) {
        if (arr[i] == head) {
            pos = i;
            break;
        }
    }

    // Move towards the left or right based on direction
    if (direction == 1) {  // Move right
        // Service requests to the right of head
        for (i = pos; i < n; i++) {
            distance = abs(arr[i] - head);
            total_distance += distance;
            head = arr[i];
        }

        // Then move to the leftmost request
        total_distance += abs(arr[n-1] - arr[0]);
        head = arr[0];

        // Service remaining requests to the left of head
        for (i = pos - 1; i >= 0; i--) {
            distance = abs(arr[i] - head);
            total_distance += distance;
            head = arr[i];
        }
    } else {  // Move left
        // Service requests to the left of head
        for (i = pos; i >= 0; i--) {
            distance = abs(arr[i] - head);
            total_distance += distance;
            head = arr[i];
        }

        // Then move to the rightmost request
        total_distance += abs(arr[0] - arr[n-1]);
        head = arr[n-1];

        // Service remaining requests to the right of head
        for (i = pos + 1; i < n; i++) {
            distance = abs(arr[i] - head);
            total_distance += distance;
            head = arr[i];
        }
    }

    printf("Total head movement = %d\n", total_distance);
}

int main() {
    int n, i, head, direction;

    printf("Enter the number of disk requests: ");
    scanf("%d", &n);

    int arr[n];
    printf("Enter the disk requests: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Enter the initial head position: ");
    scanf("%d", &head);

    printf("Enter the direction (1 for right, 0 for left): ");
    scanf("%d", &direction);

    SCAN(arr, n, head, direction);

    return 0;
}
