#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_FILES 100
#define MAX_FILENAME 50

typedef struct {
    char name[MAX_FILENAME];
    int isOccupied; 
} File;

File directory[MAX_FILES];

void initializeDirectory() {
    for (int i = 0; i < MAX_FILES; i++) {
        directory[i].isOccupied = 0;
    }
}

void createFile() {
    char filename[MAX_FILENAME];
    printf("Enter the name of the file to create: ");
    scanf("%s", filename);

    
    for (int i = 0; i < MAX_FILES; i++) {
        if (directory[i].isOccupied && strcmp(directory[i].name, filename) == 0) {
            printf("File '%s' already exists!\n", filename);
            return;
        }
    }

    for (int i = 0; i < MAX_FILES; i++) {
        if (!directory[i].isOccupied) {
            strcpy(directory[i].name, filename);
            directory[i].isOccupied = 1;
            printf("File '%s' created successfully.\n", filename);
            return;
        }
    }

    printf("Directory is full! Cannot create more files.\n");
}

void deleteFile() {
    char filename[MAX_FILENAME];
    printf("Enter the name of the file to delete: ");
    scanf("%s", filename);

    for (int i = 0; i < MAX_FILES; i++) {
        if (directory[i].isOccupied && strcmp(directory[i].name, filename) == 0) {
            directory[i].isOccupied = 0;
            printf("File '%s' deleted successfully.\n", filename);
            return;
        }
    }

    printf("File '%s' not found!\n", filename);
}

void searchFile() {
    char filename[MAX_FILENAME];
    printf("Enter the name of the file to search: ");
    scanf("%s", filename);

    for (int i = 0; i < MAX_FILES; i++) {
        if (directory[i].isOccupied && strcmp(directory[i].name, filename) == 0) {
            printf("File '%s' found at index %d.\n", filename, i);
            return;
        }
    }

    printf("File '%s' not found!\n", filename);
}

void listFiles() {
    printf("Files in the directory:\n");
    int fileCount = 0;
    for (int i = 0; i < MAX_FILES; i++) {
        if (directory[i].isOccupied) {
            printf("  - %s\n", directory[i].name);
            fileCount++;
        }
    }
    if (fileCount == 0) {
        printf("No files in the directory.\n");
    }
}

int main() {
    int choice;

    initializeDirectory();

    do {
        printf("\nSingle-Level Directory File System\n");
        printf("1. Create File\n");
        printf("2. Delete File\n");
        printf("3. Search File\n");
        printf("4. List Files\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                createFile();
                break;
            case 2:
                deleteFile();
                break;
            case 3:
                searchFile();
                break;
            case 4:
                listFiles();
                break;
            case 5:
                printf("Exiting the program. Goodbye!\n");
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    } while (choice != 5);

    return 0;
}
