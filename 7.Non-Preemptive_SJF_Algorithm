#include <stdio.h>

void calculateWaitingTime(int n, int bt[], int wt[], int at[]) {
    int completion_time[n];
    int completed[n];
    int current_time = 0;
    int completed_count = 0;
    int shortest_job;
    
    for (int i = 0; i < n; i++) {
        completed[i] = 0;
    }
    
    while (completed_count < n) {
        shortest_job = -1;
        for (int i = 0; i < n; i++) {
            if (!completed[i] && at[i] <= current_time) {
                if (shortest_job == -1 || bt[i] < bt[shortest_job]) {
                    shortest_job = i;
                }
            }
        }
        
        if (shortest_job != -1) {
            current_time += bt[shortest_job];
            completion_time[shortest_job] = current_time;
            wt[shortest_job] = completion_time[shortest_job] - at[shortest_job] - bt[shortest_job];
            completed[shortest_job] = 1;
            completed_count++;
        } else {
            current_time++;
        }
    }
}

void calculateTurnaroundTime(int n, int bt[], int wt[], int tat[]) {
    for (int i = 0; i < n; i++) {
        tat[i] = bt[i] + wt[i];
    }
}

int main() {
    int n;

    printf("Enter the number of processes: ");
    scanf("%d", &n);

    int bt[n], at[n], wt[n], tat[n];
    
    printf("Enter arrival time and burst time for each process:\n");
    for (int i = 0; i < n; i++) {
        printf("Process %d (Arrival Time, Burst Time): ", i + 1);
        scanf("%d %d", &at[i], &bt[i]);
    }

    calculateWaitingTime(n, bt, wt, at);
    calculateTurnaroundTime(n, bt, wt, tat);

    printf("\nProcess\tAT\tBT\tWT\tTAT\n");
    for (int i = 0; i < n; i++) {
        printf("%d\t%d\t%d\t%d\t%d\n", i + 1, at[i], bt[i], wt[i], tat[i]);
    }

    float avg_wt = 0, avg_tat = 0;
    for (int i = 0; i < n; i++) {
        avg_wt += wt[i];
        avg_tat += tat[i];
    }

    avg_wt /= n;
    avg_tat /= n;

    printf("\nAverage Waiting Time: %.2f", avg_wt);
    printf("\nAverage Turnaround Time: %.2f\n", avg_tat);

    return 0;
}
